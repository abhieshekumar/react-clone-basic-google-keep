[{"/home/abhishek/Desktop/mykeep/src/index.js":"1","/home/abhishek/Desktop/mykeep/src/App.js":"2","/home/abhishek/Desktop/mykeep/src/reportWebVitals.js":"3","/home/abhishek/Desktop/mykeep/src/components/layout/Header.jsx":"4","/home/abhishek/Desktop/mykeep/src/components/layout/Sidebar.jsx":"5","/home/abhishek/Desktop/mykeep/src/components/layout/Main.jsx":"6","/home/abhishek/Desktop/mykeep/src/components/NewNote.jsx":"7","/home/abhishek/Desktop/mykeep/src/components/Notes.jsx":"8","/home/abhishek/Desktop/mykeep/src/components/Note.jsx":"9","/home/abhishek/Desktop/mykeep/src/components/Color.jsx":"10","/home/abhishek/Desktop/mykeep/src/hooks/useNotes.js":"11","/home/abhishek/Desktop/mykeep/src/firebase.js":"12","/home/abhishek/Desktop/mykeep/src/contexts/current.js":"13","/home/abhishek/Desktop/mykeep/src/hooks/useToggle.js":"14","/home/abhishek/Desktop/mykeep/src/utils/index.js":"15","/home/abhishek/Desktop/mykeep/src/data.js":"16"},{"size":500,"mtime":1607928463779,"results":"17","hashOfConfig":"18"},{"size":449,"mtime":1608020981312,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1607928463779,"results":"20","hashOfConfig":"18"},{"size":461,"mtime":1607976784589,"results":"21","hashOfConfig":"18"},{"size":1229,"mtime":1608017633964,"results":"22","hashOfConfig":"18"},{"size":192,"mtime":1608017932749,"results":"23","hashOfConfig":"18"},{"size":2331,"mtime":1608020556799,"results":"24","hashOfConfig":"18"},{"size":754,"mtime":1608017714742,"results":"25","hashOfConfig":"18"},{"size":1321,"mtime":1608020008470,"results":"26","hashOfConfig":"18"},{"size":533,"mtime":1608020148447,"results":"27","hashOfConfig":"18"},{"size":706,"mtime":1608019955514,"results":"28","hashOfConfig":"18"},{"size":245,"mtime":1607978050047,"results":"29","hashOfConfig":"18"},{"size":457,"mtime":1608017402221,"results":"30","hashOfConfig":"18"},{"size":436,"mtime":1608019257613,"results":"31","hashOfConfig":"18"},{"size":769,"mtime":1608020183792,"results":"32","hashOfConfig":"18"},{"size":325,"mtime":1608019915454,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1pbfism",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/abhishek/Desktop/mykeep/src/index.js",[],["69","70"],"/home/abhishek/Desktop/mykeep/src/App.js",[],"/home/abhishek/Desktop/mykeep/src/reportWebVitals.js",[],"/home/abhishek/Desktop/mykeep/src/components/layout/Header.jsx",[],"/home/abhishek/Desktop/mykeep/src/components/layout/Sidebar.jsx",[],"/home/abhishek/Desktop/mykeep/src/components/layout/Main.jsx",[],"/home/abhishek/Desktop/mykeep/src/components/NewNote.jsx",["71"],"import {useState, useRef} from 'react';\nimport {FaPaintRoller, FaSave, FaEraser} from 'react-icons/fa';   \nimport Color from './Color';\nimport {addNote} from '../utils';\nimport { useCurrentContext } from '../contexts/current';\nimport { useToggle } from '../hooks/useToggle';\n\nconst NewNote = () => {\n\n    const [isNewNoteActive, toggleIsNewNoteActive, forceIsNewNoteActive] = useToggle();\n    const [isColor, toggleIsColor, forceIsColor] = useToggle();\n    const [color, setColor] = useState(`white`);\n    const {current} = useCurrentContext();\n    const titleRef = useRef();\n    const bodyRef = useRef();\n\n    const submit = () => {\n        addNote(bodyRef.current.value, color, titleRef.current.value);\n        clearNote();\n        forceIsNewNoteActive(false);\n    }\n\n    const clearNote = () => {\n        titleRef.current.value = \"\";\n        bodyRef.current.value = \"\";\n        forceIsColor(false);\n        setColor(`white`);\n    }\n\n    return(\n        current === 'current'?\n        <div className=\"newNote\" style={{background: isNewNoteActive?color:`white`}}>\n            {!isNewNoteActive && <div onClick={() => {forceIsNewNoteActive(true)}}  className=\"NewNote__small\">\n                <div>Take a note ...</div>\n            </div>}\n            {isNewNoteActive && <div className=\"NewNote__expanded\">\n                <div>\n                    <input ref={titleRef} type=\"text\" placeholder=\"Title\"/>\n                </div>\n                <div>\n                    <textarea ref={bodyRef} placeholder=\"Take a note ...\"/>\n                </div>\n                <div className=\"newNote__action\">\n                    <span title=\"Color\" onClick={toggleIsColor}>\n                        <FaPaintRoller/>\n                        {isColor && <Color setColor={setColor}/>}\n                    </span>\n                    <span title=\"Save\" onClick={submit}>\n                        <FaSave/>\n                    </span>\n                    <span title=\"Clear\" onClick={clearNote}>\n                        <FaEraser/>\n                    </span>\n                    <span style={{flexGrow: 2, textAlign: `right`}}onClick={() => {forceIsColor(false);forceIsNewNoteActive(false)}}>\n                        Close\n                    </span>\n                </div>\n            </div>}\n        </div>:null\n    )\n}\n\nexport default NewNote;","/home/abhishek/Desktop/mykeep/src/components/Notes.jsx",[],"/home/abhishek/Desktop/mykeep/src/components/Note.jsx",[],"/home/abhishek/Desktop/mykeep/src/components/Color.jsx",[],"/home/abhishek/Desktop/mykeep/src/hooks/useNotes.js",[],"/home/abhishek/Desktop/mykeep/src/firebase.js",[],["72","73"],"/home/abhishek/Desktop/mykeep/src/contexts/current.js",[],"/home/abhishek/Desktop/mykeep/src/hooks/useToggle.js",[],"/home/abhishek/Desktop/mykeep/src/utils/index.js",[],"/home/abhishek/Desktop/mykeep/src/data.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":10,"column":29,"nodeType":"80","messageId":"81","endLine":10,"endColumn":50},{"ruleId":"74","replacedBy":"82"},{"ruleId":"76","replacedBy":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'toggleIsNewNoteActive' is assigned a value but never used.","Identifier","unusedVar",["84"],["85"],"no-global-assign","no-unsafe-negation"]